from PyQt5.QtWidgets import QApplication, QGraphicsView, QStyleFactory
from PyQt5.QtCore import Qt 

import sys
if sys.platform == 'win32':
    # Windows-specific adjustments
    from ctypes import windll
    windll.shcore.SetProcessDpiAwareness(1)  # Для правильного масштабирования

import a_YAML_2_Graph
import methods
import os

# Autogenerated with DRAKON Editor 1.31

def a_Main():
    # Тема светлая
    
    QApplication.setStyle("Fusion")
    
    QApplication.setPalette(
    	QStyleFactory.create("Fusion")
    		.standardPalette()
    )
    
    _next_item_ = 68
    while True:
        if _next_item_ == 68:
            """Основная функция приложения"""
            
            app = QApplication([])
            
            s_Error = ""
            
            # главное окно 
            window = methods.create_main_window()
            _next_item_ = 100
    
        elif _next_item_ == 100:
            s_User_Choice = methods.options_FileName()
            _next_item_ = 32
    
        elif _next_item_ == 32:
            if s_User_Choice == '':
                _next_item_ = 54
            else:
                _next_item_ = 60
    
        elif _next_item_ == 60:
            if os.path.exists(s_User_Choice):
                #item 64
                with open(s_User_Choice, 'r', encoding='utf-8') as file:
                    s_Code = file.read()
                _next_item_ = 65
            else:
                #item 63
                # TOOD 
                # сообщение Файла НЕТ
                _next_item_ = 54
    
        elif _next_item_ == 65:
            if methods.yaml_Validate(s_Code):
                _next_item_ = 101
            else:
                #item 82
                s_Error = \
                "Код диаграммы плохой"
                _next_item_ = 54
    
        elif _next_item_ == 54:
            s_User_Choice = methods.file_Choice([])
            _next_item_ = 470001
    
        elif _next_item_ == 470001:
            if s_User_Choice == "File create":
                #item 74
                # TODO создать файл пустой диаграммы
                _next_item_ = 77
            else:
                _next_item_ = 470002
    
        elif _next_item_ == 77:
            s_Code = methods.file_New_Create()
            _next_item_ = 78
    
        elif _next_item_ == 78:
            if s_Code == "":
                #item 83
                s_Error = \
                "Ошибка создания нового файла"
                return None
            else:
                _next_item_ = 101
    
        elif _next_item_ == 101:
            # Создание элементов интерфейса
            toolbar = methods.create_toolbar(window)
            function_dock, filter_input, function_list = methods.create_function_list(window)
            scene, view = methods.create_diagram_canvas(window)
            
            # Настройка и отображение
            methods.setup_layout(window, toolbar, function_dock, view)
            _next_item_ = 98
    
        elif _next_item_ == 98:
            scene = a_YAML_2_Graph.code_2_Graph(s_Code)
            
            view = QGraphicsView(scene)
            
            window.setCentralWidget(view)
            _next_item_ = 76
    
        elif _next_item_ == 76:
            window.show()
            _next_item_ = 75
    
        elif _next_item_ == 75:
            sys.exit(app.exec_())
            return None
    
        elif _next_item_ == 470002:
            if s_User_Choice == "File open dialog":
                #item 70
                s_User_Choice = methods.file_Open_Dialog()
                _next_item_ = 71
            else:
                _next_item_ = 470003
    
        elif _next_item_ == 71:
            if s_User_Choice is None:
                _next_item_ = 54
            else:
                _next_item_ = 60
    
        elif _next_item_ == 470003:
            if s_User_Choice == "Exit":
                #item 81
                s_Error = \
                "Пользователь выбрал Выход"
                return None
            else:
                _next_item_ = 60
    


def b_YAML_2_Graph(s_Code):
    pass

if __name__ == "__main__":
    a_Main()
