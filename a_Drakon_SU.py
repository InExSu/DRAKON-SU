from PyQt5.QtWidgets import QApplication, QGraphicsView, QStyleFactory
from PyQt5.QtCore import Qt 

import sys
if sys.platform == 'win32':
    # Windows-specific adjustments
    from ctypes import windll
    windll.shcore.SetProcessDpiAwareness(1)  # Для правильного масштабирования

import a_YAML_2_Graph
import a_Methods
import os

# Autogenerated with DRAKON Editor 1.31

def a_Main():
    #item 169
    log_2_CSV("Liana: Start")
    #item 207
    file_CSV_Crop("log.csv",10)
    #item 170
    log_2_CSV("Liana: Command line arguments")
    #item 135
    s_Error,  \
    s_File_Name, \
    s_Diagram_Code = diagram_Code_From_Command_Line()
    #item 144
    if s_Error == "":
        #item 168
        if s_Diagram_Code == "":
            #item 171
            log_2_CSV("Liana: Silhouette")
            #item 147
            s_File_Name = file_Name_temp()
            #item 139
            s_Diagram_Code = silhouette_Code()
        else:
            pass
    else:
        #item 146
        warning_Show(s_Error)
        #item 171
        log_2_CSV("Liana: Silhouette")
        #item 147
        s_File_Name = file_Name_temp()
        #item 139
        s_Diagram_Code = silhouette_Code()
    #item 172
    log_2_CSV("Liana: Diagram show")
    #item 143
    state = diagram_Show( \
    		s_file_name, \
    		s_Diagram_Code)
    #item 163
    if state == "":
        #item 173
        log_2_CSV("Liana: Users actions")
        #item 148
        b_Exit = False
        
        while not b_Exit:
        	b_Exit = user_Actions()
    else:
        #item 166
        warning_Show(state)


def diagram_Code_From_Command_Line():
    #item 187
    log_2_CSV("Liana: Start")
    #item 191
    s_Error = ""
    s_File_Name = ""
    s_Diagram_Code = ""
    #item 174
    parser = argparse.ArgumentParser(
        description="Утилита для работы с файлами")
    parser.add_argument('--file_create', type=str, help='Файл создать')
    parser.add_argument('--file_open', type=str, help='Файл открыть')
    #item 175
    if args.file_create:
        #item 192
        s_File_Name = args.file_create
        #item 189
        log_2_CSV("Liana: File create")
        #item 194
        b = file_create(s_File_Name)
        #item 195
        if b:
            #item 204
            s_Diagram_Code = silhouette_Code()
        else:
            #item 198
            s_Error = \
            "Ошибка создания файла {s_File_Name}"
    else:
        #item 184
        if args.file_open:
            #item 193
            s_File_Name = args.file_open
            #item 190
            log_2_CSV("Liana: File open")
            #item 199
            b = file_open(s_File_Name)
            #item 200
            if b:
                #item 205
                s_Diagram_Code = \
                file_2_Variable(s_File_Name)
            else:
                #item 203
                s_Error = \
                "Ошибка открытия файла {s_File_Name}"
        else:
            #item 188
            log_2_CSV("Liana: Arguments not found")
    #item 206
    return \
    	s_Error,  \
    	s_File_Name, \
    	s_Diagram_Code

if __name__ == "__main__":
    a_Main()
